<section id="directory-structure">
<sectioninfo>
<abstract><para>Structure of the xmlroff files</para></abstract>
</sectioninfo>
<title>Directory Structure</title>

<section id="directory-structure">
<title>Directory structure</title>

<programlisting>xmlroff
  libfo
    area
    datatype
    docs
    expr
    fo
    property
    util
  xmlroff</programlisting>

</section>

<section id="xmlroff">
<title>xmlroff</title>

<para>This is the root directory of the xmlroff source code tree. It contains the configuration files but no C source code.</para>

<section id="xmlroff-libfo">
<title>xmlroff/libfo</title>

<para>Top-level interfaces for accessing the 'libfo' library.</para>

<para>.c and .h files for top-level, non-object source code as well as the .c and .h files for the top-level FoContext, FoObject and FoNode object types.</para>

<para>fo-context.[ch] are autogenerated (then modified).</para>

<section id="xmlroff-area">
<title>xmlroff/libfo/area</title>

<para>Source code for area objects. None of these files are autogenerated.</para>

</section>

<section id="xmlroff-datatype">
<title>xmlroff/libfo/datatype</title>

<para>Source code for datatype objects. None of these files are autogenerated.</para>

</section>

<section id="xmlroff-docs">
<title>xmlroff/docs</title>

<para>Documentation that is built using gtk-doc (which has a strong resemblance to Javadoc). A lot of the files are autogenerated by the gtk-doc tools.</para>

<para>xmlroff-property-{decl,ref}.ent are autogenerated by XSL stylesheets.</para>

</section>

<section id="xmlroff-examples">
<title>xmlroff/examples</title>

<para>Example configuration files for xmlroff and examples of xmlroff in action.</para>

<section id="xmlroff-examples-io">
<title>xmlroff/examples/io</title>

<para>Example command-line xmlroff applications that demonstrate the different ways of using the top-level interfaces to the 'libfo' library.</para>

</section>

<section id="xmlroff-examples-javadoc">
<title>xmlroff/examples/javadoc</title>

<para>An example of using xmlroff to create PDF from Javadoc XML.</para>

</section>

<section id="xmlroff-examples-ubl">
<title>xmlroff/examples/ubl</title>

<para>An example of using xmlroff to format a UBL purchase order (PO).</para>

<para>Uses a stylesheet by Norman Walsh.</para>

</section>

</section>

<section id="xmlroff-expr">
<title>xmlroff/libfo/expr</title>

<para>Property value expression parser. None of these files are autogenerated.</para>

</section>

<section id="xmlroff-fo">
<title>xmlroff/libfo/fo</title>

<para>Source code for GObject objects corresponding to XSL formatting objects.</para>

<para>fo-*.c, fo-*.h, and fo-*-private.h are autogenerated but may have been additionally hand modified.</para>

<para>fo-*-area.[ch] are not autogenerated.</para>

<para>fo-tree*.[ch] are not autogenerated.</para>

<para>fo-inline-fo.[ch] and fo-block-fo.[ch] are not autogenerated.</para>

</section>

<section id="xmlroff-property">
<title>xmlroff/property</title>

<para>Source code for GObject objects corresponding to XSL formatting object properties.</para>

<para>fo-property-*.[ch] are autogenerated, but may have been hand modified.</para>

</section>

<section id="xmlroff-util">
<title>xmlroff/libfo/util</title>

<para>Source code for GObject objects that are useful but which don't
relate to anything in the XSL spec, e.g., an FoObject-ified hash table
implementation.</para>

<para>None of the code is autogenerated.</para>

</section>

</section>

<section id="xmlroff-xmlroff">
<title>xmlroff/xmlroff</title>

<para>Source code for the 'xmlroff' command-line executable.</para>

<para>None of the code is autogenerated.</para>

</section>

</section>

</section>